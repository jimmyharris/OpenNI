cmake_minimum_required(VERSION 2.8)

project(OpenNI)

# Options
# ---------
add_definitions(-DCUSTOM_SAMPLE_XML_PATH="config/SamplesConfig.xml")
add_definitions(-DCUSTOM_SAMPLE_USER_XML_PATH="config/Sample-User.xml")
add_definitions(-DXN_USE_CUSTOM_MODULES_FILE="config/modules.xml")
ADD_DEFINITIONS(-DUSE_GLUT)

# Find platform 
# -------------
if(CMAKE_SYSTEM_NAME STREQUAL "Linux")
	set(OPENNI_PLATFORM_LINUX true)
elseif (WIN32)
	set(OPENNI_PLATFORM_WIN32 true)
elseif (APPLE)
	set(OPENNI_PLATFORM_APPLE true)
endif()

set(CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/cmake" ${CMAKE_MODULE_PATH})
set(LIBRARY_OUTPUT_PATH ${CMAKE_BINARY_DIR}/lib)
set(EXECUTABLE_OUTPUT_PATH ${CMAKE_BINARY_DIR}/bin)

# Some global variables
# ----------------------
set(TINYXML_INCLUDE_DIR "${CMAKE_CURRENT_SOURCE_DIR}/Source/External/TinyXml/")
set(OPENNI_INCLUDE_DIR "${CMAKE_CURRENT_SOURCE_DIR}/Include/")
set(OPENNI_MODULES_DIR "${CMAKE_CURRENT_SOURCE_DIR}/Source/Modules")
set(TINYXML_LIB_NAME TinyXml)
set(JPEG_LIB_NAME jpeg)
set(OPENNI_LIB_NAME OpenNI)
set(NIMCOMMON_LIB_NAME nimCommon)
set(NIMCODECS_LIB_NAME nimCodecs)
set(NIMMOCKNODES_LIB_NAME nimMockNodes)
set(NIMRECORDER_LIB_NAME nimRecorder)

INCLUDE_DIRECTORIES(${OPENNI_INCLUDE_DIR})

# Find JPEG system lib
# ---------------------
find_package(JPEG)
if(NOT JPEG_FOUND)
	# when not found use the one in the externals folder, so we can compile!
	set(JPEG_FOUND true)
	set(JPEG_INCLUDE_DIR "${CMAKE_CURRENT_SOURCE_DIR}/Source/External/LibJPEG/")
	add_subdirectory("./Source/External/LibJPEG/")
endif()

# Find USB lib
# -------------
if(OPENNI_PLATFORM_LINUX OR OPENNI_PLATFORM_APPLE) 
  find_package(USB)
endif()

if (NOT USB_FOUND OR NOT JPEG_FOUND)
	message(FATAL_ERROR "Could not find library dependencies")
endif()

# @todo find tinyxml!

# Use external libraries.
# -----------------------
add_subdirectory("./Source/External/TinyXml/") # @todo only when lib was not found 
add_subdirectory("./Source/OpenNI/")
add_subdirectory("./Source/Modules/")

# Add samples
# ---------------------------
add_subdirectory("./Samples/NiAudioSample") #Compiles and runs on Mac
add_subdirectory("./Samples/NiBackRecorder") #Compiles and runs on Mac
add_subdirectory("./Samples/NiConvertXToONI") #Compiles and runs on Mac
#add_subdirectory("./Samples/NiCRead") #Compiles and runs on Mac # gives error in linux
add_subdirectory("./Samples/NiRecordSynthetic") #Compiles and runs on Mac
add_subdirectory("./Samples/NiSampleModule") #Library compiles on Mac
add_subdirectory("./Samples/NiSimpleCreate") #Compiles and runs on Mac
add_subdirectory("./Samples/NiSimpleRead")  #Compiles and runs on Mac
add_subdirectory("./Samples/NiSimpleViewer") #Compiles and runs on Mac
add_subdirectory("./Samples/NiUserTracker") #Compiles and runs on Mac
add_subdirectory("./Samples/NiViewer") #Compiles and runs on Mac

# Utils
# ---------------------------
add_subdirectory("./Source/Utils/")

add_subdirectory(SensorKinect)

SET(NITE_INCLUDE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/Nite/Include)
add_subdirectory(Nite)

execute_process(COMMAND ${CMAKE_COMMAND} -E create_symlink ${CMAKE_SOURCE_DIR}/Data
                                                           ${EXECUTABLE_OUTPUT_PATH}/config)
